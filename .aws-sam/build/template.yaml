AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'GO_fun

  Sample SAM Template for GO_fun

  '
Globals:
  Function:
    Timeout: 5
Resources:
  UserFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: UserFunctionsRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      Tags:
      - Value: SAM
        Key: lambda:createdBy
  UserS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: paxi-users
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetUsers
      CodeUri: GetUsersFunction
      Handler: getUsers
      Runtime: go1.x
      Role:
        Fn::GetAtt:
        - UserFunctionsRole
        - Arn
      Tracing: Active
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /users
            Method: GET
      Environment:
        Variables:
          TABLE: Users
  CreateUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateUsers
      CodeUri: CreateUsersFunction
      Handler: createUsers
      Runtime: go1.x
      Role:
        Fn::GetAtt:
        - UserFunctionsRole
        - Arn
      Tracing: Active
      Events:
        PostUser:
          Type: Api
          Properties:
            Path: /users
            Method: POST
      Environment:
        Variables:
          TABLE: Users
Outputs:
  UsersAPI:
    Description: API Gateway endpoint URL for Prod environment for Users Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users/
  GetUsersFunction:
    Description: GetUsers Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetUsersFunction
      - Arn
  CreateUsersFunction:
    Description: CreateUsers Lambda Function ARN
    Value:
      Fn::GetAtt:
      - CreateUsersFunction
      - Arn
